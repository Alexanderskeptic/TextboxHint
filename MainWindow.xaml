<Window x:Class="TextboxHint.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TextboxHint"
        Height="200" Width="400">

    <Window.Resources>
        <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
        <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
        <SolidColorBrush x:Key="brushWatermarkBorder" Color="Indigo" />

        <local:TextBoxFocusToVisibilitySettingsConverter x:Key="TextBoxFocusToVisibilitySettingsConverter" />
        <local:TextBoxInputToVisibilitySettingsConverter x:Key="TextBoxInputToVisibilitySettingsConverter" />

        <Style x:Key="EntryFieldStyle" TargetType="Grid" >
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20,0" />
        </Style>
    </Window.Resources>

    <Grid Background="LightBlue">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="{StaticResource brushWatermarkBackground}" Style="{StaticResource EntryFieldStyle}" >
            <TextBlock Margin="5,2" Text="This prompt dissappears as you type..." Foreground="{StaticResource brushWatermarkForeground}">
                <TextBlock.Visibility>
                    <!-- MultiBinding setup: -->
                    <!-- We bind an object-source TextBox "txtUserEntry" to an object-reciever (this TextBlock) -->
                    <!-- and then we choose class TextBoxInputToVisibilitySettingsConverter as a converter to our properties-->
                    <MultiBinding Converter="{StaticResource TextBoxInputToVisibilitySettingsConverter}">
                        <!-- TextBox "txtUserEntry" binding properties below: -->
                        <!-- Text.IsEmpty returns true, if TextBox.Text is empty -->
                        <Binding ElementName="txtUserEntry" Path="Text.IsEmpty" />
                    </MultiBinding>
                </TextBlock.Visibility>
            </TextBlock>
            <TextBox Name="txtUserEntry" Background="Transparent" BorderBrush="{StaticResource brushWatermarkBorder}" />
        </Grid>

        <Grid Grid.Row="1" Background="{StaticResource brushWatermarkBackground}" Style="{StaticResource EntryFieldStyle}" >
            <TextBlock Margin="5,2" Text="This dissappears as the control gets focus..." Foreground="{StaticResource brushWatermarkForeground}" >
                <TextBlock.Visibility>
                    <!-- MultiBinding setup: -->
                    <!-- We bind an object-source TextBox "txtUserEntry2" to an object-reciever (this TextBlock) -->
                    <!-- and then we choose class TextBoxFocusToVisibilitySettingsConverter as a converter to our properties-->
                    <MultiBinding Converter="{StaticResource TextBoxFocusToVisibilitySettingsConverter}">
                        <!-- TextBox "txtUserEntry2" binding properties below: -->
                        <!-- Property Text.IsEmpty returns true, if TextBox.Text is empty -->
                        <Binding ElementName="txtUserEntry2" Path="Text.IsEmpty" />
                        <!-- Property IsFocused returns true, if "txtUserEntry2" is in focus right now -->
                        <Binding ElementName="txtUserEntry2" Path="IsFocused" />
                    </MultiBinding>
                </TextBlock.Visibility>
            </TextBlock>
            <TextBox Name="txtUserEntry2" Background="Transparent" BorderBrush="{StaticResource brushWatermarkBorder}" />
        </Grid>

    </Grid>
</Window>
